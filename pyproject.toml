[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pdf-to-docx-converter"
version = "1.0.0"
description = "A powerful Python tool that converts PDF files to Microsoft Word DOCX format while preserving layout, styling, and performing OCR on embedded images."
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "PDF to DOCX Converter Team"}
]
keywords = ["pdf", "docx", "converter", "ocr", "layout-preservation", "document-conversion"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Office Suites",
    "Topic :: Text Processing :: Markup",
    "Topic :: Scientific/Engineering :: Image Recognition",
]
requires-python = ">=3.8"
dependencies = [
    "PyMuPDF>=1.23.0",
    "pytesseract>=0.3.10",
    "python-docx>=0.8.11",
    "Pillow>=10.0.0",
    "opencv-python>=4.8.0",
    "numpy>=1.24.0",
    "click>=8.1.0",
    "colorama>=0.4.6",
    "tqdm>=4.65.0",
    "pyyaml>=6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]
ocr-extras = [
    "easyocr>=1.7.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/pdf-to-docx-converter"
Repository = "https://github.com/yourusername/pdf-to-docx-converter"
Issues = "https://github.com/yourusername/pdf-to-docx-converter/issues"
Documentation = "https://github.com/yourusername/pdf-to-docx-converter#readme"

[project.scripts]
pdf-to-docx = "src.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_paths = ["."]
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "setup.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "fitz.*",
    "cv2.*",
    "pytesseract.*",
    "docx.*",
    "PIL.*",
]
ignore_missing_imports = true
